name: Warn for Empty Strings

on:
  pull_request:
    paths:
      - "**/*.ts"
      - "**/*.tsx"

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  check-empty-strings:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: List files in the pull
        id: list_files
        run: |
          files=$(git diff --name-only HEAD~ HEAD | grep -E "\.(ts|tsx)$")
          files="${files//'%'/'%25'}"
          files="${files//$'\n'/'%0A'}"
          files="${files//$'\r'/'%0D'}"
          echo "::set-output name=files::$files"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find empty strings in TypeScript files
        if: steps.list_files.outputs.files != ''
        id: find_empty_strings
        run: |
          files="${{ steps.list_files.outputs.files }}"
          output=$(echo "$files" | xargs grep -Hn --include=\*.{ts,tsx} "''\|\"\"" --exclude-dir={node_modules,dist,out} || true)
          
          if [ -z "$output" ]; then
            echo "::set-output name=results::No empty strings found."
            exit 0
          else
            output=$(echo "$output" | sed 's/"/\\"/g' | sed "s/'/\\'/g")
            # Use base64 encoding to ensure special characters do not cause issues
            encoded_output=$(echo "$output" | base64)
            echo "::set-output name=results::$encoded_output"
          fi
      
      - name: Findings
        if: steps.find_empty_strings.outputs.results != 'No empty strings found.'
        run: |
          encoded_findings="${{ steps.find_empty_strings.outputs.results }}"
          if [[ "$encoded_findings" != "No empty strings found." ]]; then
            # Decode findings from base64 before printing
            findings=$(echo "$encoded_findings" | base64 --decode)
            printf "::warning::Empty strings found in the following files:\n"
            printf "%b\n" "$findings"
          else
            echo "No empty strings found. No action required."
          fi
          
      - name: Post review comments for findings
        if: steps.find_empty_strings.outputs.results != 'No empty strings found.'
        uses: actions/github-script@v7
        with:
          script: |
            const findingsRaw = Buffer.from('${{ steps.find_empty_strings.outputs.results }}', 'base64').toString('utf-8');
            const findings = findingsRaw.split('\n').filter(line => line.trim());
            const body = "Empty string detected!";
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const commit_sha = context.payload.pull_request.head.sha;
      
            for (const finding of findings) {
              const parts = finding.split(':');
              const path = parts[0];
              const line = parseInt(parts[1], 10);
      
              try {
                await github.rest.repos.createCommitComment({
                  owner,
                  repo,
                  commit_sha,
                  path,
                  body,
                  position: line,
                });
                console.log(`Comment posted to ${path} at position ${line}`);
              } catch (error) {
                console.error(`Error posting comment to ${path}:${line}`, error);
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
